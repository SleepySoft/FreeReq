我使用pyqt5，有一个QTextEdit，名为self.__text_md_editor，我希望它能接受文件拖入或者图片粘贴。如果是文件拖入，给用户三个选项：
1.将文件复制到attachment目录下（默认），如果存在同名文件，则弹出输入框要求用户改名（默认输入内容是一个随机UUID），直到名字不冲突为止。
2.直接链接到文件
3.取消
如果是图片粘贴，则弹出输入框要求用户给图片命名（默认输入内容是一个随机UUID），直到名字不冲突为止。将剪贴版中的图片以此名字保存到attachment目录下。
生成一段markdown文本，链接到对应的文件。


我使用pyqt5，有一个QTextEdit，名为self.__text_md_editor，我希望它能接受文件拖入，并给用户三个选项：
1.将文件复制到attachment目录下（默认），如果存在同名文件，则弹出输入框要求用户改名（默认输入内容是一个随机UUID），直到名字不冲突为止。
2.直接链接到文件
3.取消
生成一段markdown文本，链接到该文件，并将这段文本插入到光标所在位置。


我使用pyqt5，有一个QTextEdit，名为self.__text_md_editor。
我希望它能接受文件图片粘贴，并弹出输入框要求用户给图片命名（默认输入内容是一个随机UUID），直到名字不冲突为止。
将剪贴版中的图片以此名字保存到attachment目录下，生成一段markdown文本，引用对应的图片。



请完成TODO中的代码，将其中的相对路径转换为QWebEngineView能识别的绝对路径。包括src和href中的相对路径，但不要转换非相对路径的url。
把req_root_path加到相对路径前面，并把'\\'转换为'/'。

def on_text_content_edit(self):
    md_text = self.__text_md_editor.toPlainText()
    html_text = self.render_markdown(md_text)
    html_text = html_text.replace('strike>', 'del>')
    # self.__text_md_viewer.setMarkdown(text)
    req_root_path = self.__req_data_agent.get_req_root()
    if isinstance(self.__text_md_viewer, QWebEngineView):
        # TODO: Parse the url in html_text as abs path like: file:///
        pass
    self.__text_md_viewer.setHtml(html_text)
    self.on_content_changed()




我有一个refactor_result列表，里面的内容是多个[distance, key]，其中key有重复。
我需要整理这个列表，使得其中key不重复，且distance为该key最小的distance。
返回值按distance从小到大排序。




使用python实现一个函数：average_split_text(text: str, threshold: int, tolerance: float)
如果text的长度小于threshold * (1 + tolerance)，则不分割。
否则将文本分割为不大于threshold且均匀的部分。
最后返回结果列表。




使用Python写一个窗口：IndexListUI，它包含一个列表控件，名为index_list，包含两列：Title和ID，单行且整行选择。
窗口初始大小为300 * 600并出现在屏幕右下角。
无最大最小化按钮。当用户点击关闭时，窗口隐藏，下次显示时保持隐藏之前的位置。
提供接口append_index和clear_index，前者接受title，和index作为参数，均为str。将其加入index_list。
当用户点击index_list中的一行，响应事件，并取出index备用。





使用pyqt5写一个聊天窗口类，上方为一个占高度80%的对话记录框，只读，下方为一个多行输入框和一个发送按钮。
该类会创建一个线程，在后台做额外的工作（TODO）
当用户输入内容并点击“发送”时，输入内容会发送到线程中处理（标记为TODO），并清空输入框。
在线程中，当收到输入内容时，将输入内容追加到历史列表并追加到对话记录框中（考虑多线程操作UI的问题）。
注意：该窗口并非主程序窗口，当程序退出时，该类需要优雅地退出线程。




写一段python代码，将pyqt5的QWebEngineView及QTextEdit中的富文本或HTML页面发送到打印。
需要展示打印预览页面，在打印预览页面中选择打印机并提供执行打印的按钮。




写一个弹出框，提示用户：已打印到output.pdf，请在打开的pdf中进行另存或打印的操作。使用英文。


使用python写一个类叫做EasyConfig，构造函数参数为(config_file: str='config.json', key_splitter: str='.')作为参数。
构造时自动载入对应json文件并将其保存在dict中。
实现set(key: str, value: Any)和get(key: str, default: Any=None)接口。当调用set时，更新dict并将dict保存到文件中。
使用key_splitter指定的分隔符分隔key，按分隔的key做为层级访问dict对应的值。
在set的时候，如果某一个非最后层级的key对应的值不存在，则将其设为dict；如果一个非最后层级的key对应的值非dict，则返回False。
在get的时候，如果目标不是dict或dict没有这个值，返回default。

为这个类增加restore功能，清空dict并保存。
